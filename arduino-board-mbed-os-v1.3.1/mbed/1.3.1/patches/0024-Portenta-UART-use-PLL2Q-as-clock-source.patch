From 0f4d89641637cceff7d044d496a963d411bda716 Mon Sep 17 00:00:00 2001
From: Martino Facchin <m.facchin@arduino.cc>
Date: Mon, 18 May 2020 15:01:22 +0200
Subject: [PATCH 24/31] Portenta: UART: use PLL2Q as clock source

---
 .../TARGET_PORTENTA_H7/clocks.c               | 30 +++++++++++++++++++
 1 file changed, 30 insertions(+)
 create mode 100644 targets/TARGET_STM/TARGET_STM32H7/TARGET_STM32H747xI/TARGET_PORTENTA_H7/clocks.c

diff --git a/targets/TARGET_STM/TARGET_STM32H7/TARGET_STM32H747xI/TARGET_PORTENTA_H7/clocks.c b/targets/TARGET_STM/TARGET_STM32H7/TARGET_STM32H747xI/TARGET_PORTENTA_H7/clocks.c
new file mode 100644
index 0000000000..8fcc3dcfb9
--- /dev/null
+++ b/targets/TARGET_STM/TARGET_STM32H7/TARGET_STM32H747xI/TARGET_PORTENTA_H7/clocks.c
@@ -0,0 +1,30 @@
+#include <stdbool.h>
+#include "device/stm32h7xx_hal.h"
+#include "device/stm32h7xx_hal_uart.h"
+
+extern bool isBetaBoard();
+
+void HAL_UART_MspInit(UART_HandleTypeDef *huart) {
+
+	RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
+
+    //printf("called HAL_UART_MspInit\n");
+
+	//PeriphClkInitStruct.PLL2.PLL2State = RCC_PLL_ON;
+    //PeriphClkInitStruct.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
+    if (isBetaBoard()) {
+    	PeriphClkInitStruct.PLL2.PLL2M = 27;
+    } else {
+    	PeriphClkInitStruct.PLL2.PLL2M = 25;
+    }
+    PeriphClkInitStruct.PLL2.PLL2N = 200;
+    PeriphClkInitStruct.PLL2.PLL2P = 2;
+    PeriphClkInitStruct.PLL2.PLL2Q = 2;
+    PeriphClkInitStruct.PLL2.PLL2R = 2;
+
+    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_USART234578 | RCC_PERIPHCLK_USART16;
+	PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PLL2;
+	PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_PLL2;
+  	PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_PLL2;
+    HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
+};
\ No newline at end of file
-- 
2.27.0

